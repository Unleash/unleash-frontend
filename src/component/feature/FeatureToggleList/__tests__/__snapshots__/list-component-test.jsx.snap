// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with one feature 1`] = `
<div
  className="featureContainer"
>
  <div
    className="searchBarContainer"
  >
    <div>
      <div
        className="MuiFormControl-root MuiTextField-root"
        onKeyPress={[Function]}
        style={
          Object {
            "maxWidth": "80%",
            "width": "500px",
          }
        }
      >
        <label
          className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-marginDense MuiInputLabel-outlined"
          data-shrink={false}
        >
          Search
        </label>
        <div
          className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-marginDense MuiOutlinedInput-marginDense"
          onClick={[Function]}
        >
          <input
            aria-invalid={false}
            autoFocus={false}
            className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense"
            disabled={false}
            onAnimationStart={[Function]}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            required={false}
            type="text"
            value=""
          />
          <fieldset
            aria-hidden={true}
            className="PrivateNotchedOutline-root-1 MuiOutlinedInput-notchedOutline"
          >
            <legend
              className="PrivateNotchedOutline-legendLabelled-3"
            >
              <span>
                Search
              </span>
            </legend>
          </fieldset>
        </div>
      </div>
    </div>
    <a
      aria-disabled={false}
      className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedSecondary MuiButton-containedSizeLarge MuiButton-sizeLarge"
      data-test="add-feature-btn"
      href="/features/create"
      onBlur={[Function]}
      onClick={[Function]}
      onDragLeave={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseLeave={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      role="button"
      tabIndex={0}
    >
      <span
        className="MuiButton-label"
      >
        Add new feature
      </span>
    </a>
  </div>
  <div
    className="MuiPaper-root MuiPaper-elevation1 MuiPaper-rounded"
    shadow={0}
  >
    <div>
      <div
        className="listComponentHeader"
      >
        <button
          aria-controls="metric"
          aria-haspopup="true"
          className="MuiButtonBase-root MuiButton-root MuiButton-text dropdownButton"
          disabled={false}
          id="metric"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={0}
          title="Metric interval"
          type="button"
        >
          <span
            className="MuiButton-label"
          >
            Last minute
            <span
              className="MuiButton-endIcon MuiButton-iconSizeMedium"
            >
              <span
                aria-hidden={true}
                className="material-icons MuiIcon-root"
              >
                arrow_drop_down
              </span>
            </span>
          </span>
        </button>
        <button
          aria-controls="sorting"
          aria-haspopup="true"
          className="MuiButtonBase-root MuiButton-root MuiButton-text dropdownButton"
          disabled={false}
          id="sorting"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={0}
          title="Sort by"
          type="button"
        >
          <span
            className="MuiButton-label"
          >
            By name
            <span
              className="MuiButton-endIcon MuiButton-iconSizeMedium"
            >
              <span
                aria-hidden={true}
                className="material-icons MuiIcon-root"
              >
                arrow_drop_down
              </span>
            </span>
          </span>
        </button>
        <Project
          settings={
            Object {
              "sort": "name",
            }
          }
          updateSetting={[MockFunction]}
        />
      </div>
    </div>
    <hr />
    <ul
      className="MuiList-root MuiList-padding"
    >
      <ListItem
        feature={
          Object {
            "name": "Another",
            "reviveName": "Another",
          }
        }
        hasPermission={[Function]}
        setFilter={[Function]}
        settings={
          Object {
            "sort": "name",
          }
        }
        toggleFeature={[MockFunction]}
      />
    </ul>
  </div>
</div>
`;

exports[`renders correctly with one feature without permissions 1`] = `
<div
  className="featureContainer"
>
  <div
    className="searchBarContainer"
  >
    <div>
      <div
        className="MuiFormControl-root MuiTextField-root"
        onKeyPress={[Function]}
        style={
          Object {
            "maxWidth": "80%",
            "width": "500px",
          }
        }
      >
        <label
          className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-marginDense MuiInputLabel-outlined"
          data-shrink={false}
        >
          Search
        </label>
        <div
          className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-marginDense MuiOutlinedInput-marginDense"
          onClick={[Function]}
        >
          <input
            aria-invalid={false}
            autoFocus={false}
            className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense"
            disabled={false}
            onAnimationStart={[Function]}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            required={false}
            type="text"
            value=""
          />
          <fieldset
            aria-hidden={true}
            className="PrivateNotchedOutline-root-1 MuiOutlinedInput-notchedOutline"
          >
            <legend
              className="PrivateNotchedOutline-legendLabelled-3"
            >
              <span>
                Search
              </span>
            </legend>
          </fieldset>
        </div>
      </div>
    </div>
  </div>
  <div
    className="MuiPaper-root MuiPaper-elevation1 MuiPaper-rounded"
    shadow={0}
  >
    <div>
      <div
        className="listComponentHeader"
      >
        <button
          aria-controls="metric"
          aria-haspopup="true"
          className="MuiButtonBase-root MuiButton-root MuiButton-text dropdownButton"
          disabled={false}
          id="metric"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={0}
          title="Metric interval"
          type="button"
        >
          <span
            className="MuiButton-label"
          >
            Last minute
            <span
              className="MuiButton-endIcon MuiButton-iconSizeMedium"
            >
              <span
                aria-hidden={true}
                className="material-icons MuiIcon-root"
              >
                arrow_drop_down
              </span>
            </span>
          </span>
          <span
            className="MuiTouchRipple-root"
          />
        </button>
        <button
          aria-controls="sorting"
          aria-haspopup="true"
          className="MuiButtonBase-root MuiButton-root MuiButton-text dropdownButton"
          disabled={false}
          id="sorting"
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={0}
          title="Sort by"
          type="button"
        >
          <span
            className="MuiButton-label"
          >
            By name
            <span
              className="MuiButton-endIcon MuiButton-iconSizeMedium"
            >
              <span
                aria-hidden={true}
                className="material-icons MuiIcon-root"
              >
                arrow_drop_down
              </span>
            </span>
          </span>
          <span
            className="MuiTouchRipple-root"
          />
        </button>
        <Project
          settings={
            Object {
              "sort": "name",
            }
          }
          updateSetting={[MockFunction]}
        />
      </div>
    </div>
    <hr />
    <ul
      className="MuiList-root MuiList-padding"
    >
      <ListItem
        feature={
          Object {
            "name": "Another",
            "reviveName": "Another",
          }
        }
        hasPermission={[Function]}
        setFilter={[Function]}
        settings={
          Object {
            "sort": "name",
          }
        }
        toggleFeature={[MockFunction]}
      />
    </ul>
  </div>
</div>
`;
