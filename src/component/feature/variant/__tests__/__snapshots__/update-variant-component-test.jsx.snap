// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with with variants 1`] = `
<section
  style={
    Object {
      "maxWidth": "700px",
      "padding": "16px",
    }
  }
>
  <p>
    Variants allows you to return a variant object if the feature toggle is considered enabled for the current request. When using variants you should use the
     
    <code
      style={
        Object {
          "color": "navy",
        }
      }
    >
      getVariant()
    </code>
     method in the Client SDK.
  </p>
  <table
    className="mdl-data-table mdl-shadow--2dp variantTable"
  >
    <thead>
      <tr>
        <th>
          Variant name
        </th>
        <th
          className="labels"
        />
        <th>
          Weight
        </th>
        <th>
          Weight Type
        </th>
        <th
          className="actions"
        />
      </tr>
    </thead>
    <tbody>
      <tr>
        <td
          onClick={[Function]}
        >
          blue
        </td>
        <td
          className="labels"
        >
           
          <react-mdl-Chip
            style={
              Object {
                "backgroundColor": "rgba(173, 216, 230, 0.2)",
              }
            }
          >
            Overrides
          </react-mdl-Chip>
        </td>
        <td>
          3.4
           %
        </td>
        <td>
          Variable
        </td>
        <td
          className="actions"
        >
          <react-mdl-IconButton
            name="edit"
            onClick={[Function]}
          />
          <react-mdl-IconButton
            name="delete"
            onClick={[Function]}
          />
        </td>
      </tr>
      <tr>
        <td
          onClick={[Function]}
        >
          yellow
        </td>
        <td
          className="labels"
        >
           
        </td>
        <td>
          3.3
           %
        </td>
        <td>
          Variable
        </td>
        <td
          className="actions"
        >
          <react-mdl-IconButton
            name="edit"
            onClick={[Function]}
          />
          <react-mdl-IconButton
            name="delete"
            onClick={[Function]}
          />
        </td>
      </tr>
      <tr>
        <td
          onClick={[Function]}
        >
          orange
        </td>
        <td
          className="labels"
        >
          <react-mdl-Chip>
            Payload
          </react-mdl-Chip>
           
        </td>
        <td>
          3.3
           %
        </td>
        <td>
          Fix
        </td>
        <td
          className="actions"
        >
          <react-mdl-IconButton
            name="edit"
            onClick={[Function]}
          />
          <react-mdl-IconButton
            name="delete"
            onClick={[Function]}
          />
        </td>
      </tr>
    </tbody>
  </table>
  <br />
  <p>
    <a
      href="#add-variant"
      onClick={[Function]}
      title="Add variant"
    >
      Add variant
    </a>
  </p>
</section>
`;

exports[`renders correctly with without variants 1`] = `
<section
  style={
    Object {
      "maxWidth": "700px",
      "padding": "16px",
    }
  }
>
  <p>
    Variants allows you to return a variant object if the feature toggle is considered enabled for the current request. When using variants you should use the
     
    <code
      style={
        Object {
          "color": "navy",
        }
      }
    >
      getVariant()
    </code>
     method in the Client SDK.
  </p>
  <p>
    No variants defined.
  </p>
  <br />
  <p>
    <a
      href="#add-variant"
      onClick={[Function]}
      title="Add variant"
    >
      Add variant
    </a>
  </p>
</section>
`;

exports[`renders correctly with without variants and no permissions 1`] = `
<section
  style={
    Object {
      "maxWidth": "700px",
      "padding": "16px",
    }
  }
>
  <p>
    Variants allows you to return a variant object if the feature toggle is considered enabled for the current request. When using variants you should use the
     
    <code
      style={
        Object {
          "color": "navy",
        }
      }
    >
      getVariant()
    </code>
     method in the Client SDK.
  </p>
  <p>
    No variants defined.
  </p>
  <br />
</section>
`;
