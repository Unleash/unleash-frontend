// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with with variants 1`] = `
<section
  style={
    Object {
      "padding": "16px",
    }
  }
>
  <p>
    Variants allows you to return a variant object if the feature toggle is considered enabled for the current request. When using variants you should use the
     
    <code
      style={
        Object {
          "color": "navy",
        }
      }
    >
      getVariant()
    </code>
     method in the client SDK.
  </p>
  <p
    style={
      Object {
        "backgroundColor": "rgba(255, 229, 255, 0.4)",
        "padding": "5px",
      }
    }
  >
    The sum of variants weights needs to be a constant number to guarantee consistent hashing in the client implementations, this is why we will sometime allocate a few more percentages to the first variant if the sum is not exactly 100. In a final version of this feature it should be possible to the user to manually set the percentages for each variant.
  </p>
  <p>
    <a
      href="#add-variant"
      onClick={[Function]}
      title="Add variant"
    >
      Add variant
    </a>
  </p>
  <form>
    <table
      className="mdl-data-table mdl-shadow--2dp variantTable"
    >
      <thead>
        <tr>
          <th>
            Name
          </th>
          <th>
            Weight
          </th>
          <th
            className="actions"
          />
        </tr>
      </thead>
      <tbody>
        <tr>
          <td
            onClick={[Function]}
          >
            blue
          </td>
          <td>
            34
          </td>
          <td
            className="actions"
          >
            <react-mdl-IconButton
              name="expand_more"
              onClick={[Function]}
            />
            <react-mdl-IconButton
              name="delete"
              onClick={[Function]}
            />
          </td>
        </tr>
        <tr>
          <td
            onClick={[Function]}
          >
            yellow
          </td>
          <td>
            33
          </td>
          <td
            className="actions"
          >
            <react-mdl-IconButton
              name="expand_more"
              onClick={[Function]}
            />
            <react-mdl-IconButton
              name="delete"
              onClick={[Function]}
            />
          </td>
        </tr>
        <tr>
          <td
            onClick={[Function]}
          >
            orange
          </td>
          <td>
            33
          </td>
          <td
            className="actions"
          >
            <react-mdl-IconButton
              name="expand_more"
              onClick={[Function]}
            />
            <react-mdl-IconButton
              name="delete"
              onClick={[Function]}
            />
          </td>
        </tr>
      </tbody>
    </table>
    <br />
    <div>
      <react-mdl-Button
        icon="add"
        primary={true}
        raised={true}
        ripple={true}
        type="submit"
      >
        <react-mdl-Icon
          name="add"
        />
           
        Save
      </react-mdl-Button>
       
      <react-mdl-Button
        onClick={[MockFunction]}
        type="cancel"
      >
        Cancel
      </react-mdl-Button>
    </div>
  </form>
</section>
`;

exports[`renders correctly with without variants 1`] = `
<section
  style={
    Object {
      "padding": "16px",
    }
  }
>
  <p>
    Variants allows you to return a variant object if the feature toggle is considered enabled for the current request. When using variants you should use the
     
    <code
      style={
        Object {
          "color": "navy",
        }
      }
    >
      getVariant()
    </code>
     method in the client SDK.
  </p>
  <p
    style={
      Object {
        "backgroundColor": "rgba(255, 229, 255, 0.4)",
        "padding": "5px",
      }
    }
  >
    The sum of variants weights needs to be a constant number to guarantee consistent hashing in the client implementations, this is why we will sometime allocate a few more percentages to the first variant if the sum is not exactly 100. In a final version of this feature it should be possible to the user to manually set the percentages for each variant.
  </p>
  <p>
    <a
      href="#add-variant"
      onClick={[Function]}
      title="Add variant"
    >
      Add variant
    </a>
  </p>
  <form>
    <p />
    <br />
    <div>
      <react-mdl-Button
        icon="add"
        primary={true}
        raised={true}
        ripple={true}
        type="submit"
      >
        <react-mdl-Icon
          name="add"
        />
           
        Save
      </react-mdl-Button>
       
      <react-mdl-Button
        onClick={[MockFunction]}
        type="cancel"
      >
        Cancel
      </react-mdl-Button>
    </div>
  </form>
</section>
`;

exports[`renders correctly with without variants and no permissions 1`] = `
<section
  style={
    Object {
      "padding": "16px",
    }
  }
>
  <p>
    Variants allows you to return a variant object if the feature toggle is considered enabled for the current request. When using variants you should use the
     
    <code
      style={
        Object {
          "color": "navy",
        }
      }
    >
      getVariant()
    </code>
     method in the client SDK.
  </p>
  <p
    style={
      Object {
        "backgroundColor": "rgba(255, 229, 255, 0.4)",
        "padding": "5px",
      }
    }
  >
    The sum of variants weights needs to be a constant number to guarantee consistent hashing in the client implementations, this is why we will sometime allocate a few more percentages to the first variant if the sum is not exactly 100. In a final version of this feature it should be possible to the user to manually set the percentages for each variant.
  </p>
  <form>
    <p />
    <br />
  </form>
</section>
`;
