/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VersionSchema } from './VersionSchema';
import {
    VersionSchemaFromJSON,
    VersionSchemaFromJSONTyped,
    VersionSchemaToJSON,
} from './VersionSchema';

/**
 *
 * @export
 * @interface UiConfigSchema
 */
export interface UiConfigSchema {
    /**
     *
     * @type {string}
     * @memberof UiConfigSchema
     */
    slogan?: string;
    /**
     *
     * @type {string}
     * @memberof UiConfigSchema
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof UiConfigSchema
     */
    version: string;
    /**
     *
     * @type {string}
     * @memberof UiConfigSchema
     */
    environment?: string;
    /**
     *
     * @type {string}
     * @memberof UiConfigSchema
     */
    unleashUrl: string;
    /**
     *
     * @type {string}
     * @memberof UiConfigSchema
     */
    baseUriPath: string;
    /**
     *
     * @type {boolean}
     * @memberof UiConfigSchema
     */
    disablePasswordAuth?: boolean;
    /**
     *
     * @type {number}
     * @memberof UiConfigSchema
     */
    segmentValuesLimit?: number;
    /**
     *
     * @type {number}
     * @memberof UiConfigSchema
     */
    strategySegmentsLimit?: number;
    /**
     *
     * @type {{ [key: string]: boolean; }}
     * @memberof UiConfigSchema
     */
    flags?: { [key: string]: boolean; };
    /**
     *
     * @type {Array<object>}
     * @memberof UiConfigSchema
     */
    links?: Array<object>;
    /**
     *
     * @type {string}
     * @memberof UiConfigSchema
     */
    authenticationType?: UiConfigSchemaAuthenticationTypeEnum;
    /**
     *
     * @type {VersionSchema}
     * @memberof UiConfigSchema
     */
    versionInfo: VersionSchema;
}


/**
 * @export
 */
export const UiConfigSchemaAuthenticationTypeEnum = {
    OpenSource: 'open-source',
    Demo: 'demo',
    Enterprise: 'enterprise',
    Hosted: 'hosted',
    Custom: 'custom',
    None: 'none'
} as const;
export type UiConfigSchemaAuthenticationTypeEnum = typeof UiConfigSchemaAuthenticationTypeEnum[keyof typeof UiConfigSchemaAuthenticationTypeEnum];


/**
 * Check if a given object implements the UiConfigSchema interface.
 */
export function instanceOfUiConfigSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "unleashUrl" in value;
    isInstance = isInstance && "baseUriPath" in value;
    isInstance = isInstance && "versionInfo" in value;

    return isInstance;
}

export function UiConfigSchemaFromJSON(json: any): UiConfigSchema {
    return UiConfigSchemaFromJSONTyped(json, false);
}

export function UiConfigSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiConfigSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'slogan': !exists(json, 'slogan') ? undefined : json['slogan'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'version': json['version'],
        'environment': !exists(json, 'environment') ? undefined : json['environment'],
        'unleashUrl': json['unleashUrl'],
        'baseUriPath': json['baseUriPath'],
        'disablePasswordAuth': !exists(json, 'disablePasswordAuth') ? undefined : json['disablePasswordAuth'],
        'segmentValuesLimit': !exists(json, 'segmentValuesLimit') ? undefined : json['segmentValuesLimit'],
        'strategySegmentsLimit': !exists(json, 'strategySegmentsLimit') ? undefined : json['strategySegmentsLimit'],
        'flags': !exists(json, 'flags') ? undefined : json['flags'],
        'links': !exists(json, 'links') ? undefined : json['links'],
        'authenticationType': !exists(json, 'authenticationType') ? undefined : json['authenticationType'],
        'versionInfo': VersionSchemaFromJSON(json['versionInfo']),
    };
}

export function UiConfigSchemaToJSON(value?: UiConfigSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'slogan': value.slogan,
        'name': value.name,
        'version': value.version,
        'environment': value.environment,
        'unleashUrl': value.unleashUrl,
        'baseUriPath': value.baseUriPath,
        'disablePasswordAuth': value.disablePasswordAuth,
        'segmentValuesLimit': value.segmentValuesLimit,
        'strategySegmentsLimit': value.strategySegmentsLimit,
        'flags': value.flags,
        'links': value.links,
        'authenticationType': value.authenticationType,
        'versionInfo': VersionSchemaToJSON(value.versionInfo),
    };
}

