/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.10.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CreateStrategySchemaConstraints,
    CreateStrategySchemaConstraintsFromJSON,
    CreateStrategySchemaConstraintsFromJSONTyped,
    CreateStrategySchemaConstraintsToJSON,
} from './CreateStrategySchemaConstraints';

/**
 * 
 * @export
 * @interface FeatureSchemaStrategies
 */
export interface FeatureSchemaStrategies {
    /**
     * 
     * @type {string}
     * @memberof FeatureSchemaStrategies
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof FeatureSchemaStrategies
     */
    name: string;
    /**
     * 
     * @type {Array<CreateStrategySchemaConstraints>}
     * @memberof FeatureSchemaStrategies
     */
    constraints: Array<CreateStrategySchemaConstraints>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof FeatureSchemaStrategies
     */
    parameters: { [key: string]: string; };
}

export function FeatureSchemaStrategiesFromJSON(json: any): FeatureSchemaStrategies {
    return FeatureSchemaStrategiesFromJSONTyped(json, false);
}

export function FeatureSchemaStrategiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureSchemaStrategies {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'constraints': ((json['constraints'] as Array<any>).map(CreateStrategySchemaConstraintsFromJSON)),
        'parameters': json['parameters'],
    };
}

export function FeatureSchemaStrategiesToJSON(value?: FeatureSchemaStrategies | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'constraints': ((value.constraints as Array<any>).map(CreateStrategySchemaConstraintsToJSON)),
        'parameters': value.parameters,
    };
}

