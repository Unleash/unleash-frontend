/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface PermissionSchema
 */
export interface PermissionSchema {
    /**
     *
     * @type {string}
     * @memberof PermissionSchema
     */
    permission: string;
    /**
     *
     * @type {string}
     * @memberof PermissionSchema
     */
    project?: string;
    /**
     *
     * @type {string}
     * @memberof PermissionSchema
     */
    environment?: string;
}

/**
 * Check if a given object implements the PermissionSchema interface.
 */
export function instanceOfPermissionSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "permission" in value;

    return isInstance;
}

export function PermissionSchemaFromJSON(json: any): PermissionSchema {
    return PermissionSchemaFromJSONTyped(json, false);
}

export function PermissionSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): PermissionSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'permission': json['permission'],
        'project': !exists(json, 'project') ? undefined : json['project'],
        'environment': !exists(json, 'environment') ? undefined : json['environment'],
    };
}

export function PermissionSchemaToJSON(value?: PermissionSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'permission': value.permission,
        'project': value.project,
        'environment': value.environment,
    };
}

