/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PlaygroundFeatureSchema } from './PlaygroundFeatureSchema';
import {
    PlaygroundFeatureSchemaFromJSON,
    PlaygroundFeatureSchemaFromJSONTyped,
    PlaygroundFeatureSchemaToJSON,
} from './PlaygroundFeatureSchema';
import type { PlaygroundRequestSchema } from './PlaygroundRequestSchema';
import {
    PlaygroundRequestSchemaFromJSON,
    PlaygroundRequestSchemaFromJSONTyped,
    PlaygroundRequestSchemaToJSON,
} from './PlaygroundRequestSchema';

/**
 * The state of all toggles given the provided input.
 * @export
 * @interface PlaygroundResponseSchema
 */
export interface PlaygroundResponseSchema {
    /**
     *
     * @type {PlaygroundRequestSchema}
     * @memberof PlaygroundResponseSchema
     */
    input: PlaygroundRequestSchema;
    /**
     *
     * @type {Array<PlaygroundFeatureSchema>}
     * @memberof PlaygroundResponseSchema
     */
    toggles: Array<PlaygroundFeatureSchema>;
}

/**
 * Check if a given object implements the PlaygroundResponseSchema interface.
 */
export function instanceOfPlaygroundResponseSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "input" in value;
    isInstance = isInstance && "toggles" in value;

    return isInstance;
}

export function PlaygroundResponseSchemaFromJSON(json: any): PlaygroundResponseSchema {
    return PlaygroundResponseSchemaFromJSONTyped(json, false);
}

export function PlaygroundResponseSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaygroundResponseSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'input': PlaygroundRequestSchemaFromJSON(json['input']),
        'toggles': ((json['toggles'] as Array<any>).map(PlaygroundFeatureSchemaFromJSON)),
    };
}

export function PlaygroundResponseSchemaToJSON(value?: PlaygroundResponseSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'input': PlaygroundRequestSchemaToJSON(value.input),
        'toggles': ((value.toggles as Array<any>).map(PlaygroundFeatureSchemaToJSON)),
    };
}

