/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ClientMetricsSchemaBucketTogglesValue } from './ClientMetricsSchemaBucketTogglesValue';
import {
    ClientMetricsSchemaBucketTogglesValueFromJSON,
    ClientMetricsSchemaBucketTogglesValueFromJSONTyped,
    ClientMetricsSchemaBucketTogglesValueToJSON,
} from './ClientMetricsSchemaBucketTogglesValue';
import type { DateSchema } from './DateSchema';
import {
    DateSchemaFromJSON,
    DateSchemaFromJSONTyped,
    DateSchemaToJSON,
} from './DateSchema';

/**
 *
 * @export
 * @interface ClientMetricsSchemaBucket
 */
export interface ClientMetricsSchemaBucket {
    /**
     *
     * @type {DateSchema}
     * @memberof ClientMetricsSchemaBucket
     */
    start: DateSchema;
    /**
     *
     * @type {DateSchema}
     * @memberof ClientMetricsSchemaBucket
     */
    stop: DateSchema;
    /**
     *
     * @type {{ [key: string]: ClientMetricsSchemaBucketTogglesValue; }}
     * @memberof ClientMetricsSchemaBucket
     */
    toggles: { [key: string]: ClientMetricsSchemaBucketTogglesValue; };
}

/**
 * Check if a given object implements the ClientMetricsSchemaBucket interface.
 */
export function instanceOfClientMetricsSchemaBucket(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "start" in value;
    isInstance = isInstance && "stop" in value;
    isInstance = isInstance && "toggles" in value;

    return isInstance;
}

export function ClientMetricsSchemaBucketFromJSON(json: any): ClientMetricsSchemaBucket {
    return ClientMetricsSchemaBucketFromJSONTyped(json, false);
}

export function ClientMetricsSchemaBucketFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientMetricsSchemaBucket {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'start': DateSchemaFromJSON(json['start']),
        'stop': DateSchemaFromJSON(json['stop']),
        'toggles': (mapValues(json['toggles'], ClientMetricsSchemaBucketTogglesValueFromJSON)),
    };
}

export function ClientMetricsSchemaBucketToJSON(value?: ClientMetricsSchemaBucket | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'start': DateSchemaToJSON(value.start),
        'stop': DateSchemaToJSON(value.stop),
        'toggles': (mapValues(value.toggles, ClientMetricsSchemaBucketTogglesValueToJSON)),
    };
}

