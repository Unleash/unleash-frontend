/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ClientMetricsSchemaBucket } from './ClientMetricsSchemaBucket';
import {
    ClientMetricsSchemaBucketFromJSON,
    ClientMetricsSchemaBucketFromJSONTyped,
    ClientMetricsSchemaBucketToJSON,
} from './ClientMetricsSchemaBucket';

/**
 * 
 * @export
 * @interface ClientMetricsSchema
 */
export interface ClientMetricsSchema {
    /**
     * 
     * @type {string}
     * @memberof ClientMetricsSchema
     */
    appName: string;
    /**
     * 
     * @type {string}
     * @memberof ClientMetricsSchema
     */
    instanceId?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientMetricsSchema
     */
    environment?: string;
    /**
     * 
     * @type {ClientMetricsSchemaBucket}
     * @memberof ClientMetricsSchema
     */
    bucket: ClientMetricsSchemaBucket;
}

/**
 * Check if a given object implements the ClientMetricsSchema interface.
 */
export function instanceOfClientMetricsSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "appName" in value;
    isInstance = isInstance && "bucket" in value;

    return isInstance;
}

export function ClientMetricsSchemaFromJSON(json: any): ClientMetricsSchema {
    return ClientMetricsSchemaFromJSONTyped(json, false);
}

export function ClientMetricsSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientMetricsSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'appName': json['appName'],
        'instanceId': !exists(json, 'instanceId') ? undefined : json['instanceId'],
        'environment': !exists(json, 'environment') ? undefined : json['environment'],
        'bucket': ClientMetricsSchemaBucketFromJSON(json['bucket']),
    };
}

export function ClientMetricsSchemaToJSON(value?: ClientMetricsSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'appName': value.appName,
        'instanceId': value.instanceId,
        'environment': value.environment,
        'bucket': ClientMetricsSchemaBucketToJSON(value.bucket),
    };
}

