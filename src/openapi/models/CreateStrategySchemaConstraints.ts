/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.10.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateStrategySchemaConstraints
 */
export interface CreateStrategySchemaConstraints {
    /**
     * 
     * @type {string}
     * @memberof CreateStrategySchemaConstraints
     */
    contextName: string;
    /**
     * 
     * @type {string}
     * @memberof CreateStrategySchemaConstraints
     */
    operator: string;
    /**
     * 
     * @type {boolean}
     * @memberof CreateStrategySchemaConstraints
     */
    caseInsensitive?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CreateStrategySchemaConstraints
     */
    inverted?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateStrategySchemaConstraints
     */
    values?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CreateStrategySchemaConstraints
     */
    value?: string;
}

export function CreateStrategySchemaConstraintsFromJSON(json: any): CreateStrategySchemaConstraints {
    return CreateStrategySchemaConstraintsFromJSONTyped(json, false);
}

export function CreateStrategySchemaConstraintsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateStrategySchemaConstraints {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contextName': json['contextName'],
        'operator': json['operator'],
        'caseInsensitive': !exists(json, 'caseInsensitive') ? undefined : json['caseInsensitive'],
        'inverted': !exists(json, 'inverted') ? undefined : json['inverted'],
        'values': !exists(json, 'values') ? undefined : json['values'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function CreateStrategySchemaConstraintsToJSON(value?: CreateStrategySchemaConstraints | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'contextName': value.contextName,
        'operator': value.operator,
        'caseInsensitive': value.caseInsensitive,
        'inverted': value.inverted,
        'values': value.values,
        'value': value.value,
    };
}

