/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StrategySchema } from './StrategySchema';
import {
    StrategySchemaFromJSON,
    StrategySchemaFromJSONTyped,
    StrategySchemaToJSON,
} from './StrategySchema';

/**
 *
 * @export
 * @interface StrategiesSchema
 */
export interface StrategiesSchema {
    /**
     *
     * @type {number}
     * @memberof StrategiesSchema
     */
    version: number;
    /**
     *
     * @type {Array<StrategySchema>}
     * @memberof StrategiesSchema
     */
    strategies: Array<StrategySchema>;
}

/**
 * Check if a given object implements the StrategiesSchema interface.
 */
export function instanceOfStrategiesSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "strategies" in value;

    return isInstance;
}

export function StrategiesSchemaFromJSON(json: any): StrategiesSchema {
    return StrategiesSchemaFromJSONTyped(json, false);
}

export function StrategiesSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): StrategiesSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'version': json['version'],
        'strategies': ((json['strategies'] as Array<any>).map(StrategySchemaFromJSON)),
    };
}

export function StrategiesSchemaToJSON(value?: StrategiesSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'version': value.version,
        'strategies': ((value.strategies as Array<any>).map(StrategySchemaToJSON)),
    };
}

