/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TagTypeSchema } from './TagTypeSchema';
import {
    TagTypeSchemaFromJSON,
    TagTypeSchemaFromJSONTyped,
    TagTypeSchemaToJSON,
} from './TagTypeSchema';

/**
 *
 * @export
 * @interface ValidateTagTypeSchema
 */
export interface ValidateTagTypeSchema {
    /**
     *
     * @type {boolean}
     * @memberof ValidateTagTypeSchema
     */
    valid: boolean;
    /**
     *
     * @type {TagTypeSchema}
     * @memberof ValidateTagTypeSchema
     */
    tagType: TagTypeSchema;
}

/**
 * Check if a given object implements the ValidateTagTypeSchema interface.
 */
export function instanceOfValidateTagTypeSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "valid" in value;
    isInstance = isInstance && "tagType" in value;

    return isInstance;
}

export function ValidateTagTypeSchemaFromJSON(json: any): ValidateTagTypeSchema {
    return ValidateTagTypeSchemaFromJSONTyped(json, false);
}

export function ValidateTagTypeSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidateTagTypeSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'valid': json['valid'],
        'tagType': TagTypeSchemaFromJSON(json['tagType']),
    };
}

export function ValidateTagTypeSchemaToJSON(value?: ValidateTagTypeSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'valid': value.valid,
        'tagType': TagTypeSchemaToJSON(value.tagType),
    };
}

