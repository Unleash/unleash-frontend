/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateUserSchema
 */
export interface CreateUserSchema {
    /**
     * 
     * @type {string}
     * @memberof CreateUserSchema
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateUserSchema
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateUserSchema
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateUserSchema
     */
    password?: string;
    /**
     * 
     * @type {number}
     * @memberof CreateUserSchema
     */
    rootRole: number;
    /**
     * 
     * @type {boolean}
     * @memberof CreateUserSchema
     */
    sendEmail?: boolean;
}

/**
 * Check if a given object implements the CreateUserSchema interface.
 */
export function instanceOfCreateUserSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "rootRole" in value;

    return isInstance;
}

export function CreateUserSchemaFromJSON(json: any): CreateUserSchema {
    return CreateUserSchemaFromJSONTyped(json, false);
}

export function CreateUserSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'username': !exists(json, 'username') ? undefined : json['username'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'rootRole': json['rootRole'],
        'sendEmail': !exists(json, 'sendEmail') ? undefined : json['sendEmail'],
    };
}

export function CreateUserSchemaToJSON(value?: CreateUserSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'username': value.username,
        'email': value.email,
        'name': value.name,
        'password': value.password,
        'rootRole': value.rootRole,
        'sendEmail': value.sendEmail,
    };
}

