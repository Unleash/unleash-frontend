/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExportParametersSchema
 */
export interface ExportParametersSchema {
    /**
     * 
     * @type {string}
     * @memberof ExportParametersSchema
     */
    format?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ExportParametersSchema
     */
    download?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ExportParametersSchema
     */
    strategies?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ExportParametersSchema
     */
    featureToggles?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ExportParametersSchema
     */
    projects?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ExportParametersSchema
     */
    tags?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ExportParametersSchema
     */
    environments?: boolean;
}

/**
 * Check if a given object implements the ExportParametersSchema interface.
 */
export function instanceOfExportParametersSchema(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExportParametersSchemaFromJSON(json: any): ExportParametersSchema {
    return ExportParametersSchemaFromJSONTyped(json, false);
}

export function ExportParametersSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportParametersSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'format': !exists(json, 'format') ? undefined : json['format'],
        'download': !exists(json, 'download') ? undefined : json['download'],
        'strategies': !exists(json, 'strategies') ? undefined : json['strategies'],
        'featureToggles': !exists(json, 'featureToggles') ? undefined : json['featureToggles'],
        'projects': !exists(json, 'projects') ? undefined : json['projects'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'environments': !exists(json, 'environments') ? undefined : json['environments'],
    };
}

export function ExportParametersSchemaToJSON(value?: ExportParametersSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'format': value.format,
        'download': value.download,
        'strategies': value.strategies,
        'featureToggles': value.featureToggles,
        'projects': value.projects,
        'tags': value.tags,
        'environments': value.environments,
    };
}

