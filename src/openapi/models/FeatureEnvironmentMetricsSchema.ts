/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FeatureEnvironmentMetricsSchema
 */
export interface FeatureEnvironmentMetricsSchema {
    /**
     * 
     * @type {string}
     * @memberof FeatureEnvironmentMetricsSchema
     */
    featureName?: string;
    /**
     * 
     * @type {string}
     * @memberof FeatureEnvironmentMetricsSchema
     */
    appName?: string;
    /**
     * 
     * @type {string}
     * @memberof FeatureEnvironmentMetricsSchema
     */
    environment: string;
    /**
     * 
     * @type {Date}
     * @memberof FeatureEnvironmentMetricsSchema
     */
    timestamp: Date;
    /**
     * 
     * @type {number}
     * @memberof FeatureEnvironmentMetricsSchema
     */
    yes: number;
    /**
     * 
     * @type {number}
     * @memberof FeatureEnvironmentMetricsSchema
     */
    no: number;
}

/**
 * Check if a given object implements the FeatureEnvironmentMetricsSchema interface.
 */
export function instanceOfFeatureEnvironmentMetricsSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "environment" in value;
    isInstance = isInstance && "timestamp" in value;
    isInstance = isInstance && "yes" in value;
    isInstance = isInstance && "no" in value;

    return isInstance;
}

export function FeatureEnvironmentMetricsSchemaFromJSON(json: any): FeatureEnvironmentMetricsSchema {
    return FeatureEnvironmentMetricsSchemaFromJSONTyped(json, false);
}

export function FeatureEnvironmentMetricsSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeatureEnvironmentMetricsSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'featureName': !exists(json, 'featureName') ? undefined : json['featureName'],
        'appName': !exists(json, 'appName') ? undefined : json['appName'],
        'environment': json['environment'],
        'timestamp': (new Date(json['timestamp'])),
        'yes': json['yes'],
        'no': json['no'],
    };
}

export function FeatureEnvironmentMetricsSchemaToJSON(value?: FeatureEnvironmentMetricsSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'featureName': value.featureName,
        'appName': value.appName,
        'environment': value.environment,
        'timestamp': (value.timestamp.toISOString()),
        'yes': value.yes,
        'no': value.no,
    };
}

