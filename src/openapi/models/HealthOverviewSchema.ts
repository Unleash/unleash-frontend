/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FeatureSchema } from './FeatureSchema';
import {
    FeatureSchemaFromJSON,
    FeatureSchemaFromJSONTyped,
    FeatureSchemaToJSON,
} from './FeatureSchema';

/**
 *
 * @export
 * @interface HealthOverviewSchema
 */
export interface HealthOverviewSchema {
    /**
     *
     * @type {number}
     * @memberof HealthOverviewSchema
     */
    version: number;
    /**
     *
     * @type {string}
     * @memberof HealthOverviewSchema
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof HealthOverviewSchema
     */
    description?: string;
    /**
     *
     * @type {number}
     * @memberof HealthOverviewSchema
     */
    members?: number;
    /**
     *
     * @type {number}
     * @memberof HealthOverviewSchema
     */
    health?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof HealthOverviewSchema
     */
    environments?: Array<string>;
    /**
     *
     * @type {Array<FeatureSchema>}
     * @memberof HealthOverviewSchema
     */
    features?: Array<FeatureSchema>;
    /**
     *
     * @type {Date}
     * @memberof HealthOverviewSchema
     */
    updatedAt?: Date | null;
}

/**
 * Check if a given object implements the HealthOverviewSchema interface.
 */
export function instanceOfHealthOverviewSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function HealthOverviewSchemaFromJSON(json: any): HealthOverviewSchema {
    return HealthOverviewSchemaFromJSONTyped(json, false);
}

export function HealthOverviewSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthOverviewSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'version': json['version'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'members': !exists(json, 'members') ? undefined : json['members'],
        'health': !exists(json, 'health') ? undefined : json['health'],
        'environments': !exists(json, 'environments') ? undefined : json['environments'],
        'features': !exists(json, 'features') ? undefined : ((json['features'] as Array<any>).map(FeatureSchemaFromJSON)),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (json['updatedAt'] === null ? null : new Date(json['updatedAt'])),
    };
}

export function HealthOverviewSchemaToJSON(value?: HealthOverviewSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'version': value.version,
        'name': value.name,
        'description': value.description,
        'members': value.members,
        'health': value.health,
        'environments': value.environments,
        'features': value.features === undefined ? undefined : ((value.features as Array<any>).map(FeatureSchemaToJSON)),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt === null ? null : value.updatedAt.toISOString()),
    };
}

