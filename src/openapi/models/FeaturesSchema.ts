/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FeatureSchema } from './FeatureSchema';
import {
    FeatureSchemaFromJSON,
    FeatureSchemaFromJSONTyped,
    FeatureSchemaToJSON,
} from './FeatureSchema';

/**
 * 
 * @export
 * @interface FeaturesSchema
 */
export interface FeaturesSchema {
    /**
     * 
     * @type {number}
     * @memberof FeaturesSchema
     */
    version: number;
    /**
     * 
     * @type {Array<FeatureSchema>}
     * @memberof FeaturesSchema
     */
    features: Array<FeatureSchema>;
}

/**
 * Check if a given object implements the FeaturesSchema interface.
 */
export function instanceOfFeaturesSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "features" in value;

    return isInstance;
}

export function FeaturesSchemaFromJSON(json: any): FeaturesSchema {
    return FeaturesSchemaFromJSONTyped(json, false);
}

export function FeaturesSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeaturesSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'version': json['version'],
        'features': ((json['features'] as Array<any>).map(FeatureSchemaFromJSON)),
    };
}

export function FeaturesSchemaToJSON(value?: FeaturesSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'features': ((value.features as Array<any>).map(FeatureSchemaToJSON)),
    };
}

