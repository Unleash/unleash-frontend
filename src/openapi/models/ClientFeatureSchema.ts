/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ClientVariantSchema } from './ClientVariantSchema';
import {
    ClientVariantSchemaFromJSON,
    ClientVariantSchemaFromJSONTyped,
    ClientVariantSchemaToJSON,
} from './ClientVariantSchema';
import type { FeatureStrategySchema } from './FeatureStrategySchema';
import {
    FeatureStrategySchemaFromJSON,
    FeatureStrategySchemaFromJSONTyped,
    FeatureStrategySchemaToJSON,
} from './FeatureStrategySchema';

/**
 * 
 * @export
 * @interface ClientFeatureSchema
 */
export interface ClientFeatureSchema {
    /**
     * 
     * @type {string}
     * @memberof ClientFeatureSchema
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ClientFeatureSchema
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof ClientFeatureSchema
     */
    description?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ClientFeatureSchema
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof ClientFeatureSchema
     */
    lastSeenAt?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof ClientFeatureSchema
     */
    enabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ClientFeatureSchema
     */
    stale?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ClientFeatureSchema
     */
    impressionData?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof ClientFeatureSchema
     */
    project?: string;
    /**
     * 
     * @type {Array<FeatureStrategySchema>}
     * @memberof ClientFeatureSchema
     */
    strategies?: Array<FeatureStrategySchema>;
    /**
     * 
     * @type {Array<ClientVariantSchema>}
     * @memberof ClientFeatureSchema
     */
    variants?: Array<ClientVariantSchema> | null;
}

/**
 * Check if a given object implements the ClientFeatureSchema interface.
 */
export function instanceOfClientFeatureSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "enabled" in value;

    return isInstance;
}

export function ClientFeatureSchemaFromJSON(json: any): ClientFeatureSchema {
    return ClientFeatureSchemaFromJSONTyped(json, false);
}

export function ClientFeatureSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientFeatureSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (json['createdAt'] === null ? null : new Date(json['createdAt'])),
        'lastSeenAt': !exists(json, 'lastSeenAt') ? undefined : (json['lastSeenAt'] === null ? null : new Date(json['lastSeenAt'])),
        'enabled': json['enabled'],
        'stale': !exists(json, 'stale') ? undefined : json['stale'],
        'impressionData': !exists(json, 'impressionData') ? undefined : json['impressionData'],
        'project': !exists(json, 'project') ? undefined : json['project'],
        'strategies': !exists(json, 'strategies') ? undefined : ((json['strategies'] as Array<any>).map(FeatureStrategySchemaFromJSON)),
        'variants': !exists(json, 'variants') ? undefined : (json['variants'] === null ? null : (json['variants'] as Array<any>).map(ClientVariantSchemaFromJSON)),
    };
}

export function ClientFeatureSchemaToJSON(value?: ClientFeatureSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'type': value.type,
        'description': value.description,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt === null ? null : value.createdAt.toISOString()),
        'lastSeenAt': value.lastSeenAt === undefined ? undefined : (value.lastSeenAt === null ? null : value.lastSeenAt.toISOString()),
        'enabled': value.enabled,
        'stale': value.stale,
        'impressionData': value.impressionData,
        'project': value.project,
        'strategies': value.strategies === undefined ? undefined : ((value.strategies as Array<any>).map(FeatureStrategySchemaToJSON)),
        'variants': value.variants === undefined ? undefined : (value.variants === null ? null : (value.variants as Array<any>).map(ClientVariantSchemaToJSON)),
    };
}

