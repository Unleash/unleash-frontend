/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TagSchema } from './TagSchema';
import {
    TagSchemaFromJSON,
    TagSchemaFromJSONTyped,
    TagSchemaToJSON,
} from './TagSchema';

/**
 *
 * @export
 * @interface TagsSchema
 */
export interface TagsSchema {
    /**
     *
     * @type {number}
     * @memberof TagsSchema
     */
    version: number;
    /**
     *
     * @type {Array<TagSchema>}
     * @memberof TagsSchema
     */
    tags: Array<TagSchema>;
}

/**
 * Check if a given object implements the TagsSchema interface.
 */
export function instanceOfTagsSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "tags" in value;

    return isInstance;
}

export function TagsSchemaFromJSON(json: any): TagsSchema {
    return TagsSchemaFromJSONTyped(json, false);
}

export function TagsSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): TagsSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'version': json['version'],
        'tags': ((json['tags'] as Array<any>).map(TagSchemaFromJSON)),
    };
}

export function TagsSchemaToJSON(value?: TagsSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'version': value.version,
        'tags': ((value.tags as Array<any>).map(TagSchemaToJSON)),
    };
}

