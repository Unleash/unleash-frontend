/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddonParameterSchema
 */
export interface AddonParameterSchema {
    /**
     * 
     * @type {string}
     * @memberof AddonParameterSchema
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AddonParameterSchema
     */
    displayName: string;
    /**
     * 
     * @type {string}
     * @memberof AddonParameterSchema
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof AddonParameterSchema
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof AddonParameterSchema
     */
    placeholder?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AddonParameterSchema
     */
    required: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AddonParameterSchema
     */
    sensitive: boolean;
}

/**
 * Check if a given object implements the AddonParameterSchema interface.
 */
export function instanceOfAddonParameterSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "displayName" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "required" in value;
    isInstance = isInstance && "sensitive" in value;

    return isInstance;
}

export function AddonParameterSchemaFromJSON(json: any): AddonParameterSchema {
    return AddonParameterSchemaFromJSONTyped(json, false);
}

export function AddonParameterSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddonParameterSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'displayName': json['displayName'],
        'type': json['type'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'placeholder': !exists(json, 'placeholder') ? undefined : json['placeholder'],
        'required': json['required'],
        'sensitive': json['sensitive'],
    };
}

export function AddonParameterSchemaToJSON(value?: AddonParameterSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'displayName': value.displayName,
        'type': value.type,
        'description': value.description,
        'placeholder': value.placeholder,
        'required': value.required,
        'sensitive': value.sensitive,
    };
}

