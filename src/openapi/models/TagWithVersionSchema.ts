/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TagSchema } from './TagSchema';
import {
    TagSchemaFromJSON,
    TagSchemaFromJSONTyped,
    TagSchemaToJSON,
} from './TagSchema';

/**
 * 
 * @export
 * @interface TagWithVersionSchema
 */
export interface TagWithVersionSchema {
    /**
     * 
     * @type {number}
     * @memberof TagWithVersionSchema
     */
    version: number;
    /**
     * 
     * @type {TagSchema}
     * @memberof TagWithVersionSchema
     */
    tag: TagSchema;
}

/**
 * Check if a given object implements the TagWithVersionSchema interface.
 */
export function instanceOfTagWithVersionSchema(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "tag" in value;

    return isInstance;
}

export function TagWithVersionSchemaFromJSON(json: any): TagWithVersionSchema {
    return TagWithVersionSchemaFromJSONTyped(json, false);
}

export function TagWithVersionSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): TagWithVersionSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'version': json['version'],
        'tag': TagSchemaFromJSON(json['tag']),
    };
}

export function TagWithVersionSchemaToJSON(value?: TagWithVersionSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'tag': TagSchemaToJSON(value.tag),
    };
}

