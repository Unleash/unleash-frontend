/* tslint:disable */
/* eslint-disable */
/**
 * Unleash API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.14.0-beta.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BootstrapUiSchema,
  HealthCheckSchema,
} from '../models';
import {
    BootstrapUiSchemaFromJSON,
    BootstrapUiSchemaToJSON,
    HealthCheckSchemaFromJSON,
    HealthCheckSchemaToJSON,
} from '../models';

/**
 *
 */
export class OtherApi extends runtime.BaseAPI {

    /**
     */
    async getBootstrapUiDataRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BootstrapUiSchema>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/api/admin/ui-bootstrap`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BootstrapUiSchemaFromJSON(jsonValue));
    }

    /**
     */
    async getBootstrapUiData(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BootstrapUiSchema> {
        const response = await this.getBootstrapUiDataRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async getHealthRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HealthCheckSchema>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // apiKey authentication
        }

        const response = await this.request({
            path: `/health`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => HealthCheckSchemaFromJSON(jsonValue));
    }

    /**
     */
    async getHealth(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HealthCheckSchema> {
        const response = await this.getHealthRaw(initOverrides);
        return await response.value();
    }

}
